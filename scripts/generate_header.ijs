NB. read some waveforms; print them as C arrays
NB. usage (command line):
NB.    jconsole generate_header.ijs
require'wav.ijs format/printf'

NB. waveforms originally signed 16-bit integer data
pna=:wavdata fread'audio/pnoise16_7_20160520100116_96416.wav' NB. pink noise array
wna=:wavdata fread'audio/wnoise16_7_20160520100116_98149.wav' NB. white noise array
'pink white'=:4095*(<:2^16)%~&>pna;wna

NB. attenuation array
vol=:0,|.(10^_1r4)&*/\20$1 NB. 20 5dB steps down from 100%, plus 0 (i.e. negative infinity dB)

NB. formatting
wrap=:dyad def'({.x),y,(}.x)' NB. ('{};' wrap 'foo')='{foo};'

makearray=:dyad define
'name type'=.;:x
fmt=.($'int'ss type){::'%1.15f';'%d'
data=.;([,(<','),])/(fmt&sprintf) each y
decl=.'const std::array<',type,',',(":#y),'> ',name
body=.'{};'wrap '{}'wrap data
decl,body,LF,LF
)

hdr=:noun define
/* This file was auto-generated by Motz-PixelTone/scripts/generate_header.ijs */
#pragma once
#include <array>

)

NB. write the header file
dat=:hdr,('volumes double'makearray vol),('pink int16_t'makearray pink),('white int16_t'makearray white)
dat fwrite'../code/src/waveforms.hpp'

exit''
